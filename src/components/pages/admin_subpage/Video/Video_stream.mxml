<?xml version="1.0" encoding="utf-8"?>
<s:VGroup 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	creationComplete="initApp()"
	width="100%"
	textAlign="center"
	horizontalAlign="center">
	<fx:Script><![CDATA[
		
		import org.red5.as3.net.Connection;
		import org.red5.as3.net.events.ConnectionEvent;
		
		import flash.net.NetConnection;
		import flash.net.Responder; 
		
		private var conn:Connection;
		private var nc:NetConnection;
		private var vid:Video;
		//private var defaultURL:String="rtmp://localhost/midiDemo";
		private var defaultURL:String="http://192.168.0.100/cgi-bin/nph-zms?mode=jpeg&amp;monitor=1&amp;scale=100&amp;maxfps=5&amp;buffer=1000&amp;connkey=269420&amp;rand=1335117458";
		private var ns:NetStream;
		private var msg:Boolean;
		//private var videoHolder:UIComponent;
		
		public function initApp():void
		{
		conn = new Connection();
		
		
		
		vid=new Video();
		vid.width=320;
		vid.height=260; 
		vid.smoothing = true;                            
		//Attach the video to the stage              
	//	videoHolder = new UIComponent();
		videoHolder.addChild(vid);
		addEventListener(SecurityErrorEvent.SECURITY_ERROR, onSecurityError);
		//this.addChild(videoHolder);
		connect();
		}
		
		public function connect():void
		{
			nc = new NetConnection();
			nc.client = this;
			nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
			nc.connect(defaultURL);                 
		}
		
		public function onSecurityError(e:SecurityError):void
		{
			trace("Security error: ");
		}
		
		public function netStatusHandler(e:NetStatusEvent):void
		{
			switch (e.info.code) {
				case "NetConnection.Connect.Success":
					trace("Connected successfully");
					createNS();                 
					break;
				case "NetConnection.Connect.Closed":
					trace("Connection closed");                 
					connect();
					break;  
				case "NetConnection.Connect.Failed":
					trace("Connection failed");                 
					break;
				case "NetConnection.Connect.Rejected":
					trace("Connection rejected");                                   
					break;  
				case "NetConnection.Connect.AppShutdown":
					trace("App shutdown");                                  
					break;          
				case "NetConnection.Connect.InvalidApp":
					trace("Connection invalid app");                                    
					break;                                                                                                      
			}           
		}
		
		public function createNS():void
		{
			trace("Creating NetStream");
			ns=new NetStream(nc);
			//nc.call("FCSubscribe", null, "live_production"); // Only use this if your CDN requires it
			ns.addEventListener(NetStatusEvent.NET_STATUS, netStreamStatusHandler);
			vid.attachNetStream(ns);
			
			//Handle onMetaData and onCuePoint event callbacks: solution at http://tinyurl.com/mkadas
			//See another solution at http://www.adobe.com/devnet/flash/quickstart/metadata_cue_points/
			var infoClient:Object = new Object();
			infoClient.onMetaData = function oMD():void {};
			infoClient.onCuePoint = function oCP():void {};         
			ns.client = infoClient; 
			ns.bufferTime = 20; 
			ns.play("livestream");    
		/*	ns.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
			function asyncErrorHandler(event:AsyncErrorEvent):void {
				trace(event.text);
			}   */
		//	intervalMonitorBufferLengthEverySecond = setInterval(monPlayback, 1000);
		}
		
		//
		
		public function netStreamStatusHandler(e:NetStatusEvent):void
		{
			switch (e.info.code) {
				case "NetStream.Buffer.Empty":
					trace("Buffer empty: ");
					break;
				case "NetStream.Buffer.Full":
					trace("Buffer full:");
					break;
				case "NetStream.Play.Start":
					trace("Play start:");
					break;                      
			}       
		}
		
		]]>
		
	</fx:Script>
	
	<!--<s:VideoPlayer width="100%" height="100%">
		<s:source>
			<s:DynamicStreamingVideoSource streamType="live" host="rtmp://localhost/midiDemo">
			</s:DynamicStreamingVideoSource>
		</s:source>
	</s:VideoPlayer> -->
	<!-- <mx:VideoDisplay live="true" id="player" source="rtmp://localhost/midiDemo" />--> 
	<!--<mx:UIComponent id="videoContainer" />
	
	<s:HGroup width="100%" textAlign="center" horizontalAlign="center">
		<mx:Button id="playButton"  label="Play"/>
		<mx:Button id="pauseButton"   label="Pause"/>
		<mx:Button id="stopButton"  label="Stop"/>
		
		
	</s:HGroup>
	<s:HGroup width="100%" horizontalAlign="center">
		<s:Label id="volume" text="Volume:" />
		<mx:HSlider id="volumeSlider"  />
	</s:HGroup>
	<s:HGroup width="100%" horizontalAlign="center">
		
		<mx:ProgressBar id="positionBar"  label="" click="positionBar_clickHandler(event)"/>
		<mx:Label id="positionLabel" />
	</s:HGroup> -->
	
	<mx:UIComponent id="videoHolder" />
	
	
</s:VGroup>
